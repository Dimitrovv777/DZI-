Зад.1 - SUM MULTIPLY
Опишете изпълнението на следния програмен фрагмент. В какъв ред се изпълняват отделните програмни единици?
Отг.
Имаме два метода Sum и Multiply ,които се извикват в Main метода. Последователността на работа ще е:

1. Нишката на Main метода ще започне своята работа
2. Ще се изпълни първо Sum метода
3. След това ще се изпълни Multiply метода
4. Нишката в Main метода спира да работа и програма приключва своята работа.


Зад.2
Дайте пример за ситуация, в която възниква проблем „състояние на гонка“ (race condition)?
Отг.
Когато две нишките се опитват да увеличат стойността на променлива с единица едновременно.


Зад.3
Демонстрирайте създаването и стартирането на нишка, която изпълнява метода по-долу. Включете целия необходим код в отговора, в това число class Program и Main метод.


static void PrintBunny() {

    Console.WriteLine(@"|)___(|");
    Console.WriteLine(@"(o . o)");
    Console.WriteLine(@"(_).(_)");

}

Отг.
class Program

{

    static void PrintBunny()

    {


        Console.WriteLine(@"|)___(|");

        Console.WriteLine(@"(o . o)");

        Console.WriteLine(@"(_).(_)");

    }

    public static void Main(string[] args)

    {

        Thread t1 = new Thread(PrintBunny);

        t1.Start();

    }

}


Зад.4
По време на теоретичния изпит се предоставя непълен/неработещ/некоректен програмен фрагмент. Предоставеният фрагмент да се приведе в работещ вид.

Условие:

Да се напише програма, която получава цяло число n. След това програмата да генерира масива с n на брой елементи от случайни числа в интервала [-100; 100]. Програмата трябва да разполага с две нишки, които намират и отпечатват съответно минимума и максимума от елементите в масива.


Предоставен фрагмент:

using System;

using System.Collections.Generic;

using System.Linq;

using System.Threading;


namespace ExampleThread1

Отг.
class Program

[{]

[static] void FindMin(int[] arr)

{

[int min = arr[0];]

[for (int i = 0; i < arr.Length; i++)]

{

if ([arr[i] < min])

{

min = [arr[i]];

}

}

Console.WriteLine($"Minimum: {min}");

}

static void FindMax([int[] arr])

{

int max = arr[0];

for (int i = 0; i < arr.Length; i++)

{

if (arr[i] > max)

{

[max = arr[i];]

}

}

Console.WriteLine($"Maximum: {max}");

}

static void Main(string[] args)

{

int n = int.Parse(Console.ReadLine());

int[] arr = new int[n];

Random r = new Random();

for (int i = 0; i < n; i++)

{

arr[i] = r.Next(-100, 100);

}


[Thread t1 = new Thread(() => FindMin(arr));]

Thread t2 = new Thread(() => FindMax(arr));

t1.Start();

t2.Start();

[}]

}

}

Зад.5 - PRINTNUMBERS
Открийте какъв проблем при употреба на нишки се наблюдава в примерния програмен фрагмент.
Отг.
Нишката t1 е зададена като фоново и поради тази причина главната нишка не изчаква приключването на нейната работа.

Зад.6 - Stack s
Открийте какъв проблем при употреба на нишки се наблюдава в примерния програмен фрагмент.
Отг.
Racing conditions - нишката t1 добавя елемент в стека ,докато по същото време нишката t2 премахва елемент от стека. Двете нишки не се изчакват.

Зад.7
Кое от следните НЕ е състояние на нишка?
Отг.
„в изчакване” (Awaiting)

Зад.8
Опишете връзката между процес и нишка
Отг.
Процесът е абстракция на програма в режим на изпълнение ,докато нишката е по-малката единица ,която решава задачките в процеса. Един процес може да има много нишки.


Зад.9
Изберете дефиницията на понятието процес
Отг.
Процесът е абстракция на програма в режим на изпълнение

Зад.10
Демонстрирайте създаването и стартирането на нишка, която изпълнява метода по-долу. Включете целия необходим код в отговора, в това число class Program и Main метод.


static void SayHello() {

    Console.WriteLine("Hello");

}

Отг.
class Program

{

    static void SayHello()

    {



        Console.WriteLine("Hello");



    }

    public static void Main(string[] args)

    {

        Thread t1 = new Thread(SayHello);

        t1.Start();



    }



}



Зад.11
Демонстрирайте създаването и стартирането на нишка, която изпълнява метода по-долу. Включете целия необходим код в отговора, в това число class Program и Main метод.


static void Count() {

    for(int i = 5; i >= 0; i--) {

        Console.WriteLine(i);

    }

}

Отг.
class Program

{

    static void Count()

    {



        for (int i = 5; i >= 0; i--)

        {



            Console.WriteLine(i);



        }



    }

    public static void Main(string[] args)

    {

        Thread t1 = new Thread(Count);

        t1.Start();



    }



}


Зад.12
Попълнете липсващите места в текста с подходящи думи, така че да опишете връзката между процес и нишка.
Отг.
А. [Процесът] може да притежава многобройни Б. [Нишки]. Те В. [споделят общи ] ресурси. Програма, която може да изпълнява едновременно няколко редици от програмни инструкции наричаме Г. [многонишкова програма].


Зад.13
Свойството IsBackgroundThread на нишка показва:
Отг.
дали работи на преден или заден план 


Зад.14
Дефиницията „Самостоятелна редица от програмни инструкции, които се изпълняват последователно” е на понятието
Отг.
нишка


Зад.15
Изберете дефиницията на понятието нишка.
Отг.
Самостоятелна редица от програмни инструкции, които се изпълняват последователно

Зад.16
Дайте пример за поне два вида конкурентност.
Отг.
Многонишково програмиране и асинхронно програмиране (програмиране чрез асинхронни операции).


Зад.17
Кой е проблемът, който отговаря на посоченото описание?
Проблемът може да възникне по следния начин:

Нишка 1 заема ресурс А;
Нишка 2 заема ресурс B;
Нишка 1 опитва да заеме ресурс B;
Нишка 2 опитва да заеме ресурс А.

Тъй като ресурсите А и Б вече се използват съответно от нишка 1 и нишка 2, при опит на другата нишка да заеме ресурс, то тя трябва да изчака. Това води до взаимно изчакване и на двете нишки, което може да продължи безкрайно. Проблемът е възможно да възникне и между по-голям брой ресурси.


Отг.
Мъртва хватка (dead lock

Зад.18
На кой от редовете се създава правилно обект за нишка, който изпълнява метод MyMethod без параметри?
Отг.
Thread thread = new Thread(MyMethod);
















































